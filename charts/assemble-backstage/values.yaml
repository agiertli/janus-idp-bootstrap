replicaCount: 1

image:
  repository: quay.io/assemble/backstage
  pullPolicy: Always
  tag: "eeaca7ec935bd83d3efe0e3c9f9aaecd833c26b4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

oauth:
  enabled: false
  insecure: false
  cookieSecret: YXFpdWFoZm5vamRxeHBlcWJhdXNyeWRiZGtkeHZsYWQ=
  image:
    repository: quay.io/oauth2-proxy/oauth2-proxy
    pullPolicy: Always
    tag: "latest"
  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  issuerUrl: ""
  clientId: ""
  clientSecret: ""
  port: 4180

service:
  type: ClusterIP
  port: 8080

# name of instances
name: assemble-backstage

postgres:
  external: false
  ## Use presistent storage
  storage:
    enabled: true
    size: 2G
    storageClass: ""
    ## Paas Required config
    #storageClass: "aws-efs-tier-c3"
    #labels:
    #  paas.redhat.com/appcode: "ASBL-001"
  database_user: postgres
  database_name: postgres
  ## If using external db set the host
  #database_host: "example.com"

  ## Password will be autogenerated if left empty
  ## If using extrnal instance supply the password
  #database_password: "somepassword"
  database_port: 5432
  image: registry.redhat.io/rhel9/postgresql-13:1-73
  resources:
    limits:
      cpu: 400m
      memory: 596Mi
    requests:
      cpu: 100m
      memory: 128Mi
resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template

#securityContext: restricted

## There is a secret created via the template/
backstage:
  companyname: "My Company"
  port: 7007
  baseUrl: ""

  database:
    client: pg
    connection:
      host: "${POSTGRES_HOST}"
      port: "${POSTGRES_PORT}"
      user: "${POSTGRES_USER}"
      password: "${POSTGRES_ADMIN_PASSWORD}"

  ## Override Catalog with here
  catalog:
    #import:
    #  entityFilename: /examples/catalog-info.yaml
    #  pullRequestBranchName: backstage-integration
    rules:
      - allow: [Component, System, API, Resource, Location]
    locations:
      # Local example data, file locations are relative to the backend process, typically `packages/backend`
      #- type: file
      #  target: /examples/entities.yaml

      # Local example template
      #- type: file
      #  target: /examples/template/template.yaml
      #  rules:
      #    - allow: [Template]

      # Local example organizational data
      #- type: file
      #  target: /examples/org.yaml
      #  rules:
      #    - allow: [User, Group]

      - type: url
        target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-components.yaml

      # Backstage example systems
      #- type: url
      #  target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml

      # Backstage example APIs
      #- type: url
      #  target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml

      # Backstage example resources
      #- type: url
      #  target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-resources.yaml

      # Backstage example organization groups
      #- type: url
      #  target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml

      # Backstage example templates
      #- type: url
      #  target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/react-ssr-template/template.yaml
      #  rules:
      #    - allow: [Template]
